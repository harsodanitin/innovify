spring.data.jpa.repositories.enabled=false
logging.level.org.springframework.web=DEBUG
spring.application.name=Event
server.port=8010

logging.file=/Users/nitinharsoda/logs/event.log

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.generate-ddl=true

# Connection url for the database "Auth Module"
spring.datasource.url=jdbc:mysql://localhost:3306/event

# Username and password
spring.datasource.username=root
spring.datasource.password=123

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

spring.datasource.validationQuery=SELECT 1
spring.datasource.testWhileIdle=true
spring.datasource.timeBetweenEvictionRunsMillis=36000


## MULTIPART (Multipart properties)

# Enable multiple uploads
spring.servlet.multipart.enabled=true

#Threshold after which files are written to disk
spring.servlet.multipart.file-size-threshold=2KB

#Max file size
spring.servlet.multipart.max-file-size=200MB

#Max request size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
#file.uploadDir=/home/kumar/public/tmp
file.uploadDir=/Users/nitinharsoda/Public/tmp


##### LOG4J #####

log4j.rootLogger=DEBUG, STDOUT, file

log4j.appender.STDOUT=org.apache.log4j.ConsoleAppender
log4j.appender.STDOUT.layout=org.apache.log4j.PatternLayout
log4j.appender.STDOUT.layout.ConversionPattern=%5p [%t] (%F:%L) - %m%n

log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=/home/kumar/logs/event.log
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{dd-MM-yyyy HH:mm:ss} %-5p %c{1}:%L - %m%n



